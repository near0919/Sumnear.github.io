{"pages":[{"title":"关于我","text":"在代码生涯中找到我的ONE PIECE——成为一流的程序设计师","path":"about-me/index.html"},{"title":"tags","text":"","path":"tags/index.html"},{"title":"categories","text":"","path":"categories/index.html"}],"posts":[{"title":"hexo-github搭建博客3-问题整理","text":"持续更新： hexo官方文档2d插件1.安装这个live2d插件检查package.json里有没有 hexo-heloper-live2d 依赖，有的话先卸载了，然后重新安装一下。12npm uninstall hexo-helper-live2d npm install --save hexo-helper-live2d 2.下载动画model 点这里 https://github.com/xiazeyu/live2d-widget-models.git3.将packages里面所有的模版放到你博客的node_modules目录里4.配置博客的配置文件，_config.yml 123456789101112131415161718192021# Live2D## https://github.com/xiazeyu/live2d-widget.js## https://l2dwidget.js.org/docs/class/src/index.js~L2Dwidget.html#instance-method-initlive2d: model: scale: 1 hHeadPos: 0.5 vHeadPos: 0.618 display: superSample: 2 width: 150 height: 300 position: right hOffset: 0 vOffset: -20 mobile: show: true scale: 0.5 react: opacityDefault: 0.7 opacityOnHover: 0.2 载入图片1 把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true，之后生成的博文则会在同路径下增加一个同名文件夹，用来放资源。 2 执行 npm install hexo-asset-image –save 3 最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：![你想输入的替代文字](xxxx/图片名.jpg) CNAME 问题gitpage里面可以设置自己的域名访问，首先域名配置CNAME = 自己的 gitpage，然后在仓库设置 custom domain ； 每次 hexo deploy 之后，custom domain 都会被重置为空，在hexo的source目录下 新建一个 CANME 文件，在里面写上你自己的域名，之后再提交就不会有问题啦！！ 搜索我用的主题搜索框的设计样式参考了ppoffice的设计样式,只要进行输入即可进行对应的搜索, 此功能需要在您的Hexo站点上进行hexo-generator-json-content的安装和设置npm install hexo-generator-json-content --save然后在您的Hexo站点的_config.yml(非主题的_config.yml)上进行对应的设置:1234567891011jsonContent: pages: title: true text: true path: true preview: true posts: title: true text: true path: true preview: true tags和categories页面默认是没有 categories 和 tags 的；12hexo new page &quot;tags&quot; hexo new page &quot;categories&quot; 编辑source下的tags和categories目录下的md文件123456type: &quot;tags&quot;layout: &quot;tags&quot;type: &quot;categories&quot;layout: &quot;categories&quot;","path":"2018/11/17/hexo-github搭建博客3-问题整理/"},{"title":"hexo-github搭建博客2-语法入门","text":"本文内容为转载：https://blog.csdn.net/zhuzhuyule/article/details/58347687转载同时自己练习一下 补充一点内容 Markdown 是一种轻量级的 「标记语言」，优点在于： 专注你的文字内容而不是排版样式。 轻松的导出 HTML、PDF 和本身的 .md 文件。 纯文本内容，兼容所有的文本编辑器与字处理软件。 可读，直观。适合所有人的写作语言。 并且具有以下特点： 自动生成目录 代码块高亮 引用展示 表格插入 图片插入 强调显示 列表显示 自动URL链接 Hexo下使用的MarkDown为Github的GFM，风格很漂亮，简洁美观大方。但是GFM 的MarkDown语法和标准 的MarkDown稍有不同，使用过程中需要注意一些。 首先你要知道转义字符 转义字符常用对照表 或者用 \\ 转义 语法简明概述分段 两个回车换行 两个空格 + 回车标题 # ~ ######，#号的个数表示几级标题，即表示一级标题到六级标题强调 **文字** ，\\ __文字__ ， _文字_ ， *文字* ， 文字引用 &gt; 注意后面紧跟个空格表格 - 和 | 分割行和列 ， : 控制对其方式代码块 四个空格 开头或， 使用``` 代码内容```链接 [文字](链接地址)图片 ![图片说明](图片地址) ，地址可以是本地路劲，也可以是网络地址列表 * ， + ， - ， 1. ，选其中之一，注意后面紧跟个空格 标题# 欢迎使用Markdown编辑器写博客 //一级标题 对应 &#60;h1&#62; &#60;/h1\\&#62;## 标题输入 //二级标题 对应 &#60;h2&#62; &#60;/h2&#62;### 三级标题 //三级标题 对应 &#60;h3&#62; &#60;/h3&#62;#### 四级标题 //四级标题 对应 &#60;h4&#62; &#60;/h4&#62;##### 五级标题 //五级标题 对应 &#60;h5&#62; &#60;/h5&#62;###### 六级标题 //六级标题 对应 &#60;h6&#62; &#60;/h6&#62;####### 七级标题 //抱歉，木有了（但是他会影响生成的目录，目录行多出一行空行） 内容强调加粗、斜体字体 **加粗** 显示字体 *斜体* 显示字体 ***加粗并斜体*** 显示 字体 加粗 显示字体 斜体 显示字体 加粗并斜体 显示 字体 __加粗__ 显示字体 _斜体_ 显示字体 ___加粗并斜体___ 显示组合 *__加粗并斜体__* 显示 字体 加粗 显示字体 _斜体_ 显示字体 加粗并斜体 显示组合 加粗并斜体 显示 删除线这样来 ~~删除一段文本~~ 这样来 删除一段文本 高亮使用`来强调字符 //想打出 ` (反引号)需要转义的，加&#60;code&#62;&#60;/code&#62;标签强调比如`突出背景色`来显示强调效果上面的效果其实是这么实现的 `` `突出背景色` `` 引用显示引用过程中任然支持Markdown语法！ 标准使用> 每行开始都使用 ‘>‘；> 引用开始；> 引用换行；> 引用结束。 > 还在引用中！ 两个回车结束引用！ 每行开始都使用 ‘&gt;’；引用开始；引用换行；引用结束。 还在引用中！ 两个回车结束引用！ 省略使用> 仅第一行加引用；引用开始；引用换行；引用结束； 两个回车结束引用,不在引用范围内了！ 仅第一行加引用；引用开始；引用换行；引用结束； 两个回车结束引用,不在引用范围内了！ 嵌套使用> 动物>> 水生动物>> 陆生动物>>> 猴子>>> 人>>>> 程序猿>>>> 攻城狮>>产品狗 //这里需要注意，没有空行间隔，忽略降级引用标记射鸡虱 //这里需要注意，没有空行间隔，忽略降级引用标记 >> 两栖类动物>>> 大鳄鱼唐老鸭 两个回车结束引用,不在引用范围内了！ 动物 水生动物陆生动物 猴子人 程序猿攻城狮产品狗 //没有空行间隔，忽略降级引用标记射鸡虱 //没有空行间隔，忽略降级引用标记 两栖类动物 大鳄鱼唐老鸭 两个回车结束引用,不在引用范围内了！ 表格表格语法：列1 | 列2 | 列3----- | ---| ----第1行 | 12 | 13第2行 | 22 | 23第3行 | 32 | 33 列1 列2 列3 第1行 12 13 第2行 22 23 第3行 32 33 可以使用冒号来定义对齐方式：| 左对齐 | 右对齐 | 居中 || :——– | ——-:| :–: || Computer | 5000 元 | 1台 || Phone | 1999 元 | 1部 | 左对齐 右对齐 居中 Computer 5000 元 1台 Phone 1999 元 1部 代码块代码块语法遵循标准 markdown 代码，使用```开始，```结束 例如： ```Python#!/usr/bin/env python# -- coding: utf-8 --print ‘Hello World! ``` 123#!/usr/bin/env python# -*- coding: utf-8 -*-print 'Hello World! 如何在代码块中打出 ``` 实际上是使用 4个` 包含 3个` 就可以了，想表示更多，最外层+1就好了。 ```` ``` ``` ```` 链接插入123[首页](http://zhuzhuyule.xyz)[我的信息](/about/)[纪念册](https://love.zhuzhuyule.xyz/) 首页 我的信息 纪念册 图片插入 12345 ![图片alt](图片地址 &quot;图片title&quot;) 图片alt就是显示在图片下面的文字，相当于对图片内容的解释。 图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加 ![我的头像](http://zhuzhuyule.xyz/images/avatar.png) ![我的头像](/images/avatar.png) 列表无序列表 * *列表展示 * *列表展示 * *列表展示 + +列表展示 + +列表展示 + +列表展示 - -列表展示 - -列表展示 - -列表展示 *列表展示 *列表展示 *列表展示 +列表展示 +列表展示 +列表展示 -列表展示 -列表展示 -列表展示 有序列表 数字加点 二级序列 3个空格 这种方式不用手动设置序号，自动生成列表序列 我是一级序列 我是一级序列 我是一级序列 我是二级序列 我是二级序列 我是二级序列 我是一级序列 我是一级序列 我是二级序列 我是二级序列 我是二级序列 我是三级序列 #链接自动检测 [超链接名](超链接地址 “超链接title”)title可加可不加 首页:http://zhuzhuyule.xyz 我的信息:http://zhuzhuyule.xyz/about/ 纪念册:https://love.zhuzhuyule.xyz/ 补充分割线 三个或者三个以上的 - 或者 * 都可以。 流程图","path":"2018/11/15/hexo-github搭建博客2-语法入门/"},{"title":"hexo-github搭建博客1-小试牛刀","text":"一、准备环境：1、安装Node.js环境；2、安装Git环境，主要是用于直接同步生成的博客；3、通过npm安装Hexo12输入npm install hexo -g，开始安装Hexo输入hexo -v，检查hexo是否安装成功 二、初始化blog：1、新建blog文件夹2、通过Hexo初始化blog12345进入blog文件夹输入hexo init，初始化该文件夹输入npm install，安装所需要的组件输入hexo g，生成blog发布文件输入hexo s，开启服务器 三、关联Githb并推送1、创建Github账号2、创建仓库， 仓库名为：&lt;Github账号名称&gt;.github.iogithub repositories Settings 12repositories name : sumnear.github.ioCustom domain 设置自己的域名 sumnear.top 3、将本地Hexo博客推送到GithubPages 3.1 安装hexo-deployer-git插件。在命令行（即Git Bash）运行以下命令即可：1$ npm install hexo-deployer-git --save 3.2 修改_config.yml（在站点目录下）。文件末尾修改为：1234deploy: type: git repo: git@github.com:&lt;Github账号名称&gt;/&lt;Github账号名称&gt;.github.io.git branch: master 3.3 设置Git的user name和email12git config --global user.name &quot;sumnear&quot;git config --global user.email &quot;402347012@qq.com&quot; 3.4 hexo把blog内容推送到github上1hexo d","path":"2018/11/14/hexo-github搭建博客1-小试牛刀/"}]}